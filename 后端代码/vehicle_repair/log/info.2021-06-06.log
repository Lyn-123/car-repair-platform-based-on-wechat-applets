HV000001: Hibernate Validator 6.1.7.Final
Starting VehicleRepairApplication using Java 1.8.0_144 on DESKTOP-GOJUFJB with PID 10184 (E:\Lyn\IdeaProjects\vehicle_repair\target\classes started by Lyn in E:\Lyn\IdeaProjects\vehicle_repair)
No active profile set, falling back to default profiles: default
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 208 ms. Found 11 JPA repository interfaces.
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.44]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2659 ms
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 5.4.29.Final
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/car-repair'
Started VehicleRepairApplication in 6.737 seconds (JVM running for 7.907)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 2 ms
HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m51s263ms211µs900ns).
HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=23m18s118ms401µs500ns).
HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=26m48s541ms303µs400ns).
Starting VehicleRepairApplication using Java 1.8.0_144 on DESKTOP-GOJUFJB with PID 4284 (E:\Lyn\IdeaProjects\vehicle_repair\target\classes started by Lyn in E:\Lyn\IdeaProjects\vehicle_repair)
HV000001: Hibernate Validator 6.1.7.Final
No active profile set, falling back to default profiles: default
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 224 ms. Found 11 JPA repository interfaces.
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.44]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3750 ms
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 5.4.29.Final
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/car-repair'
Started VehicleRepairApplication in 10.653 seconds (JVM running for 13.447)
Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/car-repair/cart/add?number=2&storeId=1&userId=123&service={serviceId:1}&parts=]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:490)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:261)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 107 ms
Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'multipart/form-data;boundary=--------------------------758723676162773025001061;charset=UTF-8' not supported]
Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.platform.vehicle_repair.VO.ResultVO com.platform.vehicle_repair.controller.CartController.AddCartDetail(com.platform.vehicle_repair.dto.CartDetailDTO)]
Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/car-repair/cart/add?number=2&storeId=1&userId=123&service={serviceId:1}&parts=]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:490)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:261)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('n' (code 110)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('n' (code 110)): was expecting double-quote to start field name
 at [Source: (PushbackInputStream); line: 1, column: 3]]
Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('n' (code 110)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('n' (code 110)): was expecting double-quote to start field name
 at [Source: (PushbackInputStream); line: 1, column: 3]]
Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('n' (code 110)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('n' (code 110)): was expecting double-quote to start field name
 at [Source: (PushbackInputStream); line: 1, column: 3]]
HV000001: Hibernate Validator 6.1.7.Final
Starting VehicleRepairApplication using Java 1.8.0_144 on DESKTOP-GOJUFJB with PID 9888 (E:\Lyn\IdeaProjects\vehicle_repair\target\classes started by Lyn in E:\Lyn\IdeaProjects\vehicle_repair)
No active profile set, falling back to default profiles: default
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 312 ms. Found 11 JPA repository interfaces.
Tomcat initialized with port(s): 8080 (http)
Initializing ProtocolHandler ["http-nio-8080"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.44]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4138 ms
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 5.4.29.Final
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Initializing ExecutorService 'applicationTaskExecutor'
Starting ProtocolHandler ["http-nio-8080"]
Tomcat started on port(s): 8080 (http) with context path '/car-repair'
Started VehicleRepairApplication in 9.768 seconds (JVM running for 11.95)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 133 ms
